// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModelVideotek.Contexts;

#nullable disable

namespace ModelVideotek.Migrations
{
    [DbContext(typeof(VideosDbContext))]
    partial class VideosDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ModelVideotek.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAdherent")
                        .HasColumnType("int");

                    b.Property<int>("IdVideo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdAdherent");

                    b.HasIndex("IdVideo");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("ModelVideotek.Entities.Personne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Personnes");

                    b.HasDiscriminator().HasValue("Personne");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ModelVideotek.Entities.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(240)
                        .HasColumnType("nvarchar(240)");

                    b.HasKey("Id");

                    b.ToTable("Videos");

                    b.HasDiscriminator().HasValue("Video");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("RealisateurVideo", b =>
                {
                    b.Property<int>("RealisateursId")
                        .HasColumnType("int");

                    b.Property<int>("VideosId")
                        .HasColumnType("int");

                    b.HasKey("RealisateursId", "VideosId");

                    b.HasIndex("VideosId");

                    b.ToTable("RealisateurVideo");
                });

            modelBuilder.Entity("ModelVideotek.Entities.Adherent", b =>
                {
                    b.HasBaseType("ModelVideotek.Entities.Personne");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("NoAdherent")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Telephone")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasDiscriminator().HasValue("Adherent");
                });

            modelBuilder.Entity("ModelVideotek.Entities.Realisateur", b =>
                {
                    b.HasBaseType("ModelVideotek.Entities.Personne");

                    b.HasDiscriminator().HasValue("Realisateur");
                });

            modelBuilder.Entity("ModelVideotek.Entities.BluRay", b =>
                {
                    b.HasBaseType("ModelVideotek.Entities.Video");

                    b.HasDiscriminator().HasValue("BluRay");
                });

            modelBuilder.Entity("ModelVideotek.Entities.DVD", b =>
                {
                    b.HasBaseType("ModelVideotek.Entities.Video");

                    b.HasDiscriminator().HasValue("DVD");
                });

            modelBuilder.Entity("ModelVideotek.Entities.Streaming", b =>
                {
                    b.HasBaseType("ModelVideotek.Entities.Video");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasDiscriminator().HasValue("Streaming");
                });

            modelBuilder.Entity("ModelVideotek.Entities.Location", b =>
                {
                    b.HasOne("ModelVideotek.Entities.Adherent", "Adherent")
                        .WithMany("Locations")
                        .HasForeignKey("IdAdherent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelVideotek.Entities.Video", "Video")
                        .WithMany()
                        .HasForeignKey("IdVideo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adherent");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("RealisateurVideo", b =>
                {
                    b.HasOne("ModelVideotek.Entities.Realisateur", null)
                        .WithMany()
                        .HasForeignKey("RealisateursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelVideotek.Entities.Video", null)
                        .WithMany()
                        .HasForeignKey("VideosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModelVideotek.Entities.Adherent", b =>
                {
                    b.Navigation("Locations");
                });
#pragma warning restore 612, 618
        }
    }
}
